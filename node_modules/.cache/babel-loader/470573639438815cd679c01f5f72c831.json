{"ast":null,"code":"import isaName from 'isa-know-name';\nimport config from './config';\nimport questions from './questions'; // MessageParser starter code\n\nclass MessageParser {\n  constructor(actionProvider, state) {\n    this.actionProvider = actionProvider;\n    this.state = state;\n  }\n\n  async parse(message) {\n    const msg = message.replace(\"?\", \"\").toLowerCase();\n\n    if (config.step === \"presentation_init\") {\n      this.actionProvider.presentation(isaName.check(msg), isaName.filter(msg).toString());\n    } else if (config.step === \"form_init\") {\n      questions.compare(message);\n      this.actionProvider.q01(message.normalize(\"NFD\"));\n    }\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["C:/desenv/react-profile/profile/src/components/Chatbot/MessageParser.js"],"names":["isaName","config","questions","MessageParser","constructor","actionProvider","state","parse","message","msg","replace","toLowerCase","step","presentation","check","filter","toString","compare","q01","normalize"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AAGA,MAAMC,aAAN,CAAoB;AAElBC,EAAAA,WAAW,CAACC,cAAD,EAAiBC,KAAjB,EAAwB;AACjC,SAAKD,cAAL,GAAsBA,cAAtB;AACA,SAAKC,KAAL,GAAaA,KAAb;AAED;;AAGD,QAAMC,KAAN,CAAYC,OAAZ,EAAqB;AACnB,UAAMC,GAAG,GAAGD,OAAO,CAACE,OAAR,CAAgB,GAAhB,EAAqB,EAArB,EAAyBC,WAAzB,EAAZ;;AAEA,QAAIV,MAAM,CAACW,IAAP,KAAgB,mBAApB,EAAyC;AACvC,WAAKP,cAAL,CAAoBQ,YAApB,CAAiCb,OAAO,CAACc,KAAR,CAAcL,GAAd,CAAjC,EAAqDT,OAAO,CAACe,MAAR,CAAeN,GAAf,EAAoBO,QAApB,EAArD;AACD,KAFD,MAEO,IAAIf,MAAM,CAACW,IAAP,KAAgB,WAApB,EAAiC;AAEtCV,MAAAA,SAAS,CAACe,OAAV,CAAkBT,OAAlB;AACE,WAAKH,cAAL,CAAoBa,GAApB,CAAwBV,OAAO,CAACW,SAAR,CAAkB,KAAlB,CAAxB;AAEH;AACF;;AApBiB;;AAuBpB,eAAehB,aAAf","sourcesContent":["import isaName from 'isa-know-name';\r\nimport config from './config';\r\nimport questions from './questions';\r\n\r\n// MessageParser starter code\r\n\r\n\r\nclass MessageParser {\r\n\r\n  constructor(actionProvider, state) {\r\n    this.actionProvider = actionProvider;\r\n    this.state = state;\r\n\r\n  }\r\n\r\n\r\n  async parse(message) {\r\n    const msg = message.replace(\"?\", \"\").toLowerCase();\r\n\r\n    if (config.step === \"presentation_init\") {\r\n      this.actionProvider.presentation(isaName.check(msg), isaName.filter(msg).toString());\r\n    } else if (config.step === \"form_init\") {\r\n\r\n      questions.compare(message)\r\n        this.actionProvider.q01(message.normalize(\"NFD\"));\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;"]},"metadata":{},"sourceType":"module"}