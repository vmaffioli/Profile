{"ast":null,"code":"const names = require('./data.json');\n\nexports.check = function (nameEntry) {\n  const nameList = Object.values(names);\n  let result = false;\n  let verif = false;\n  let resultList = [];\n\n  if (typeof nameEntry === 'string') {\n    verif = /\\s/g.test(nameEntry);\n    nameEntry = nameEntry.trim().toLowerCase();\n\n    if (verif) {\n      nameEntry = nameEntry.split(\" \");\n    }\n\n    if (typeof nameEntry === 'object') {\n      for (let i = 0; i < nameEntry.length; i++) {\n        nameList.forEach(name => {\n          if (name.toLowerCase() == nameEntry[i].toLowerCase()) {\n            resultList.push(nameEntry[i]);\n          }\n\n          ;\n        });\n      }\n\n      ;\n\n      if (resultList.length > 0) {\n        result = true;\n      }\n    } else {\n      nameList.forEach(name => {\n        if (name.toLowerCase() == nameEntry.toLowerCase()) {\n          result = true;\n        }\n      });\n    }\n  } else if (typeof nameEntry === 'object' && !verif) {\n    for (let i = 0; i < nameEntry.length; i++) {\n      nameList.forEach(name => {\n        if (name.toLowerCase() == nameEntry[i].toLowerCase()) {\n          resultList.push(nameEntry[i]);\n        }\n\n        ;\n      });\n    }\n\n    ;\n\n    if (resultList.length > 0) {\n      result = true;\n    }\n  }\n\n  ;\n  return result;\n};\n\nexports.filter = function (nameEntry) {\n  const nameList = Object.values(names);\n  let verif = false;\n  let resultList = [];\n\n  if (typeof nameEntry === 'string') {\n    verif = /\\s/g.test(nameEntry);\n    nameEntry = nameEntry.trim().toLowerCase();\n\n    if (verif) {\n      nameEntry = nameEntry.split(\" \");\n    }\n\n    if (typeof nameEntry === 'object') {\n      const cache = [];\n      let nameBuilder;\n\n      for (let i = 0; i < nameEntry.length; i++) {\n        nameList.forEach(name => {\n          if (name.toLowerCase() == nameEntry[i].toLowerCase()) {\n            cache.push(name);\n          }\n\n          ;\n        });\n      }\n\n      ;\n\n      for (let i = 0; i < cache.length; i++) {\n        nameBuilder = nameBuilder + \" \" + cache[i];\n      }\n\n      ;\n      resultList.push(nameBuilder);\n    } else {\n      nameList.forEach(name => {\n        if (name.toLowerCase() == nameEntry.toLowerCase()) {\n          resultList.push(name);\n        }\n      });\n    }\n  } else if (typeof nameEntry === 'object' && !verif) {\n    for (let i = 0; i < nameEntry.length; i++) {\n      nameList.forEach(name => {\n        if (name.toLowerCase() == nameEntry[i].toLowerCase()) {\n          resultList.push(nameEntry[i]);\n        }\n\n        ;\n      });\n    }\n\n    ;\n  }\n\n  ;\n  return resultList;\n};","map":{"version":3,"sources":["C:/desenv/react-profile/profile/node_modules/isa-know-name/index.js"],"names":["names","require","exports","check","nameEntry","nameList","Object","values","result","verif","resultList","test","trim","toLowerCase","split","i","length","forEach","name","push","filter","cache","nameBuilder"],"mappings":"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","sourcesContent":["const names = require('./data.json');\r\n\r\nexports.check = function(nameEntry){\r\n    const  nameList = Object.values(names);\r\n    let result = false;\r\n    let verif = false;\r\n    let resultList = [];\r\n\r\n    if (typeof(nameEntry) === 'string') {\r\n        verif = /\\s/g.test(nameEntry)\r\n        nameEntry = nameEntry.trim().toLowerCase();\r\n        if (verif){\r\n            nameEntry = nameEntry.split(\" \");\r\n        }\r\n        if (typeof(nameEntry) === 'object') {\r\n\r\n            for (let i=0;i < nameEntry.length;i++){\r\n\r\n                nameList.forEach(name => {\r\n                    if (name.toLowerCase() == nameEntry[i].toLowerCase()) {\r\n                        resultList.push(nameEntry[i]);\r\n                    };\r\n                });\r\n            };\r\n            if (resultList.length > 0) {\r\n                result = true;\r\n            }\r\n        } else {\r\n            nameList.forEach(name => {\r\n                if (name.toLowerCase() == nameEntry.toLowerCase()) {\r\n                    result = true;\r\n                }\r\n            })\r\n        }\r\n    } else if ((typeof(nameEntry) === 'object') && !(verif)) {\r\n        for (let i=0;i < nameEntry.length;i++){\r\n            nameList.forEach(name => {\r\n                if ((name.toLowerCase() == nameEntry[i].toLowerCase())) {\r\n                    resultList.push(nameEntry[i]);\r\n                };\r\n            });\r\n        };\r\n        if (resultList.length > 0) {\r\n            result = true\r\n        }\r\n    };\r\n    return result;\r\n}\r\n\r\nexports.filter = function(nameEntry){\r\n    const  nameList = Object.values(names);\r\n    let verif = false;\r\n    let resultList = [];\r\n\r\n    if (typeof(nameEntry) === 'string') {\r\n        verif = /\\s/g.test(nameEntry)\r\n        nameEntry = nameEntry.trim().toLowerCase();\r\n        if (verif){\r\n            nameEntry = nameEntry.split(\" \");\r\n        }\r\n        if (typeof(nameEntry) === 'object') {\r\n            const cache = [];\r\n            let nameBuilder;\r\n            for (let i=0;i < nameEntry.length;i++){\r\n\r\n                nameList.forEach(name => {\r\n                    if (name.toLowerCase() == nameEntry[i].toLowerCase()) {\r\n                        cache.push(name);\r\n                    };\r\n                });\r\n            };\r\n            for(let i=0;i<cache.length;i++){\r\n                nameBuilder = nameBuilder + \" \" + cache[i];\r\n            };\r\n            resultList.push(nameBuilder);\r\n        } else {\r\n            nameList.forEach(name => {\r\n                if (name.toLowerCase() == nameEntry.toLowerCase()) {\r\n                    resultList.push(name);\r\n                }\r\n            })\r\n        }\r\n    } else if ((typeof(nameEntry) === 'object') && !(verif)) {\r\n        for (let i=0;i < nameEntry.length;i++){\r\n            nameList.forEach(name => {\r\n                if ((name.toLowerCase() == nameEntry[i].toLowerCase())) {\r\n                    resultList.push(nameEntry[i]);\r\n                };\r\n            });\r\n        };\r\n \r\n    };\r\n    return resultList;\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"script"}